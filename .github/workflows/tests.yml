name: CI tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: read-all

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov  # Ensure test dependencies are installed

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          INSERT_ISSUE_URLS: "true"
          CLOSE_ISSUES: "true"
          AUTO_ASSIGN: "true"# GitHub token do autoryzacji
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: autopep8
        uses: peter-evans/autopep8@v2.0.0
        with:
          args: --exit-code --recursive --in-place --aggressive --aggressive .
      - name: Check for modified files
        id: git-check
        run: echo "modified=$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT
      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Automated changes"
          git push       
          
  lint:
    needs: test
    runs-on: "ubuntu-latest"

    permissions:
      contents: write
      packages: read
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run Super-Linter
        uses: super-linter/super-linter/slim@v7.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PYTHON_RUFF: true

          
  todo-to-issue:
    runs-on: "ubuntu-latest"
    permissions:
      issues: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: TODO to Issue
        uses: alstr/todo-to-issue-action@v5
        with:
          INSERT_ISSUE_URLS: true
          CLOSE_ISSUES: true
          AUTO_ASSIGN: true
      - name: Set Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Commit and Push Changes
        run: |
          git add -A
          if [[ `git status --porcelain` ]]; then
            git commit -m "Automatically added GitHub issue links to TODOs"
            git push origin main
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
